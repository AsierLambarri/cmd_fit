# 
#
# This file contains code generated by A. Lambarri Martinez for the
# Galaxy Formation and Evolution course in the 
# Astrophysics Masters at UCM
#
# Version: Dic 11, 2023 @18:00
#
# SPDX-License-Identifier: GPL-3.0+
#

import numpy as np
from scipy.stats import iqr

def getBinSize(data_on_axis):
    """Calculates optimum bin-length using the 
       Freedman-Diaconis rule (Freedman & Diaconis 1981).

       Parameters
       ----------
       data_on_axis : array
           Data that wants to be binned.
           Array of shape (n,)

       Returns
       -------
       h : float
           Optimum bin size to histogramize the data.
    """
    N = len(data_on_axis)
    h = 2*iqr(data_on_axis)/N**(1/3)
    return h

def getBinNumber(data_on_axis):
    """Calculates optimum bin-number based on the optimum bins-ize
       estimation by 'getBinSize'.

       Parameters
       ----------
       data_on_axis : array
           Data that wants to be binned.
           Array of shape (n,)

       Returns
       -------
       n : float
           Optimum bin number to histogramize the data.
    """
    n = int(np.rint((data_on_axis.max()-data_on_axis.min())/getBinSize(data_on_axis)))
    return n
